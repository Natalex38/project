{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u042D\\u043A\\u0441\\u043F\\u0435\\u0440\\u0442\\\\Desktop\\\\govno\\\\directory\\\\directory\\\\src\\\\App.js\";\nimport './App.css';\nimport React, { useState, useEffectfrom } from 'react';\nconst listDir = [{\n  name: 'папка1',\n  id: 0,\n  parent: null\n}, {\n  name: 'папка1.1',\n  id: 2,\n  parent: 0\n}, {\n  name: 'папка1.1.1',\n  id: 5,\n  parent: 2\n}, {\n  name: 'папка2',\n  id: 1,\n  parent: null\n}, {\n  name: 'папка2.2',\n  id: 3,\n  parent: 1\n}, {\n  name: 'папка2.1',\n  id: 4,\n  parent: 1\n}];\nexport default function App() {\n  const [openedFolder, setOpenedFolder] = useState([]);\n  const [state, setState] = useState([fals]);\n\n  const openFolder = id => {\n    if (openedFolder.includes(id)) {\n      setOpenedFolder(openedFolder.filter(e => e !== id));\n    } else {\n      setOpenedFolder([...openedFolder, id]);\n    }\n  };\n\n  const RenderFolder = ({\n    item\n  }) => {\n    const children = listDir.filter(dir => dir.parent === item.id);\n    return React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      onClick: () => children.length && openFolder(item.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, item.name), React.createElement(\"button\", {\n      onClick: () => setState(item.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, \"\\u0434\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u043F\\u0430\\u043F\\u043A\\u0443 \\u0432 \", item.name), openedFolder.includes(item.id) && state && React.createElement(Modal, {\n      item: state,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }), children.length && openedFolder.includes(item.id) && React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, children.map(child => React.createElement(RenderFolder, {\n      item: child,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }))));\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, listDir.filter(item => item.parent === null).map(item => React.createElement(RenderFolder, {\n    item: item,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }))));\n\n  function Modal({\n    item\n  }) {\n    if (item) {\n      console.log(item);\n      let elimList = React.createRef();\n\n      let add = () => {\n        let namelist = elimList.current.value;\n        console.log(namelist, listDir.length + 1, item);\n        listDir.push({\n          name: namelist,\n          id: listDir.length + 1,\n          parent: item\n        });\n        elimList.current.value = null;\n      };\n\n      return React.createElement(\"div\", {\n        class: \"modal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        ClassName: \"ModalWindow\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        ClassName: \"ModalHead\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"modalTitle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u043B\\u0435\\u043D\\u0438\\u0435 \\u0434\\u0438\\u043A\\u0435\\u0440\\u0442\\u043E\\u0440\\u0438\\u0438\")), React.createElement(\"div\", {\n        ClassName: \"ModalBody\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(\"textarea\", {\n        ref: elimList,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        ClassName: \"ModalFooter\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"ModalButon\",\n        onClick: add,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, \"\\u0434\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0432 \\u0441\\u043F\\u0438\\u0441\\u043E\\u0432\"), React.createElement(\"button\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, \"\\u043E\\u0442\\u043C\\u0435\\u043D\\u0430\"))));\n    }\n  }\n\n  ;\n}","map":{"version":3,"sources":["C:/Users/Эксперт/Desktop/govno/directory/directory/src/App.js"],"names":["React","useState","useEffectfrom","listDir","name","id","parent","App","openedFolder","setOpenedFolder","state","setState","fals","openFolder","includes","filter","e","RenderFolder","item","children","dir","length","map","child","Modal","console","log","elimList","createRef","add","namelist","current","value","push"],"mappings":"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","sourcesContent":["import './App.css';\nimport React, {useState, useEffectfrom} from 'react';\n\nconst listDir =[\n{name: 'папка1', id: 0, parent: null },\n{name: 'папка1.1', id: 2, parent: 0, },\n{name: 'папка1.1.1', id: 5, parent: 2, },\n{name: 'папка2', id: 1, parent: null,},\n{name: 'папка2.2', id: 3, parent: 1,},\n{name: 'папка2.1', id: 4, parent: 1 }\n];\n\n\nexport default function App() {\n\nconst[openedFolder,setOpenedFolder]=useState([]);\nconst[state,setState]=useState([fals]);\nconst openFolder = id => {\nif(openedFolder.includes(id)){\nsetOpenedFolder(openedFolder.filter(e => e !== id))\n} else {\nsetOpenedFolder([...openedFolder,id])\n}\n};\n\nconst RenderFolder = ({item}) => {\n\nconst children = listDir.filter(dir => dir.parent === item.id);\n\nreturn <li>\n<span onClick={() => children.length && openFolder(item.id)}>{item.name}</span>\n<button onClick={() =>setState(item.id)}>добавить папку в {item.name}</button>\n{ openedFolder.includes(item.id) && state && <Modal item={state} />}\n{children.length && openedFolder.includes(item.id) && <ul>\n{children.map(child => <RenderFolder item={child} />)}\n</ul>}\n</li>;\n};\n\nreturn (<div>\n<ul className=\"App\">\n{listDir.filter(item => item.parent === null).map(item => <RenderFolder item={item} />)}\n</ul>\n</div>\n);\n\nfunction Modal({item}){\n  if(item) {\n  console.log(item);\n  let elimList= React.createRef();\n\n  let add= ()=>{\n    let namelist =elimList.current.value;\n    console.log(namelist,listDir.length + 1, item);\n    listDir.push({name: namelist, id: listDir.length + 1, parent: item})\n    elimList.current.value=null;\n  }\n  return (<div class=\"modal\">\n     <div ClassName=\"ModalWindow\">\n         <div ClassName=\"ModalHead\">\n            <div className='modalTitle'>Добавление дикертории</div>\n         </div>\n         <div ClassName=\"ModalBody\">\n         <textarea ref ={elimList}></textarea>\n         </div>\n         <div ClassName=\"ModalFooter\">\n         <button className=\"ModalButon\" onClick={add}>добавить в списов</button>\n         <button>отмена</button>\n         </div>\n     </div>\n  </div>);\n}\n};\n}\n"]},"metadata":{},"sourceType":"module"}