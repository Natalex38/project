{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u042D\\u043A\\u0441\\u043F\\u0435\\u0440\\u0442\\\\Desktop\\\\govno\\\\directory\\\\directory\\\\src\\\\App.js\";\nimport './App.css';\nimport React, { useState, useEffectfrom } from 'react';\nconst state = {\n  listDir: [{\n    name: 'папка1',\n    id: 0,\n    parent: null\n  }, {\n    name: 'папка1.1',\n    id: 2,\n    parent: 0\n  }, {\n    name: 'папка1.1.1',\n    id: 5,\n    parent: 2\n  }, {\n    name: 'папка2',\n    id: 1,\n    parent: null\n  }, {\n    name: 'папка2.2',\n    id: 3,\n    parent: 1\n  }, {\n    name: 'папка2.1',\n    id: 4,\n    parent: 1\n  }]\n};\nexport default function App() {\n  const [openedFolder, setOpenedFolder] = useState([]);\n  const [state, setState] = useState([0]);\n\n  const openFolder = id => {\n    if (openedFolder.includes(id)) {\n      setOpenedFolder(openedFolder.filter(e => e !== id));\n    } else {\n      setOpenedFolder([...openedFolder, id]);\n    }\n  };\n\n  const RenderFolder = ({\n    item\n  }) => {\n    const children = state.listDir.filter(dir => dir.parent === item.id);\n    return React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      onClick: () => children.length && openFolder(item.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, item.name), React.createElement(\"button\", {\n      onClick: () => this.setState(item.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, \"\\u0434\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u043F\\u0430\\u043F\\u043A\\u0443 \\u0432 \", item.name), children.length && openedFolder.includes(item.id) && React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, children.map(child => React.createElement(RenderFolder, {\n      item: child,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }))));\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, state.listDir.filter(item => item.parent === null).map(item => React.createElement(RenderFolder, {\n    item: item,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }))));\n\n  function Modal({\n    item\n  }) {\n    let elimList = React.createRef();\n\n    let add = () => {\n      let namelist = elimList.current.value;\n      state.listDir.push({\n        name: namelist,\n        id: listDir.length + 1,\n        parent: item.id\n      });\n      elimList.current.value = null;\n    };\n\n    return React.createElement(\"div\", {\n      ClassName: \"ModalOverlay\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      ClassName: \"ModalWindow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      ClassName: \"ModalHead\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"modalTitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u043B\\u0435\\u043D\\u0438\\u0435 \\u0434\\u0438\\u043A\\u0435\\u0440\\u0442\\u043E\\u0440\\u0438\\u0438\")), React.createElement(\"div\", {\n      ClassName: \"ModalBody\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"textarea\", {\n      ref: elimList,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      ClassName: \"ModalFooter\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"ModalButon\",\n      onClick: add,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"\\u0434\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0432 \\u0441\\u043F\\u0438\\u0441\\u043E\\u0432\"), React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"\\u043E\\u0442\\u043C\\u0435\\u043D\\u0430\"))));\n  }\n\n  ;\n}","map":{"version":3,"sources":["C:/Users/Эксперт/Desktop/govno/directory/directory/src/App.js"],"names":["React","useState","useEffectfrom","state","listDir","name","id","parent","App","openedFolder","setOpenedFolder","setState","openFolder","includes","filter","e","RenderFolder","item","children","dir","length","map","child","Modal","elimList","createRef","add","namelist","current","value","push"],"mappings":";AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,aAAzB,QAA6C,OAA7C;AAEA,MAAMC,KAAK,GAAE;AAACC,EAAAA,OAAO,EAAC,CACtB;AAACC,IAAAA,IAAI,EAAE,QAAP;AAAiBC,IAAAA,EAAE,EAAE,CAArB;AAAwBC,IAAAA,MAAM,EAAE;AAAhC,GADsB,EAEtB;AAACF,IAAAA,IAAI,EAAE,UAAP;AAAmBC,IAAAA,EAAE,EAAE,CAAvB;AAA0BC,IAAAA,MAAM,EAAE;AAAlC,GAFsB,EAGtB;AAACF,IAAAA,IAAI,EAAE,YAAP;AAAqBC,IAAAA,EAAE,EAAE,CAAzB;AAA4BC,IAAAA,MAAM,EAAE;AAApC,GAHsB,EAItB;AAACF,IAAAA,IAAI,EAAE,QAAP;AAAiBC,IAAAA,EAAE,EAAE,CAArB;AAAwBC,IAAAA,MAAM,EAAE;AAAhC,GAJsB,EAKtB;AAACF,IAAAA,IAAI,EAAE,UAAP;AAAmBC,IAAAA,EAAE,EAAE,CAAvB;AAA0BC,IAAAA,MAAM,EAAE;AAAlC,GALsB,EAMtB;AAACF,IAAAA,IAAI,EAAE,UAAP;AAAmBC,IAAAA,EAAE,EAAE,CAAvB;AAA0BC,IAAAA,MAAM,EAAE;AAAlC,GANsB;AAAT,CAAb;AAUA,eAAe,SAASC,GAAT,GAAe;AAE9B,QAAK,CAACC,YAAD,EAAcC,eAAd,IAA+BT,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAK,CAACE,KAAD,EAAOQ,QAAP,IAAiBV,QAAQ,CAAC,CAAC,CAAD,CAAD,CAA9B;;AACA,QAAMW,UAAU,GAAGN,EAAE,IAAI;AACzB,QAAGG,YAAY,CAACI,QAAb,CAAsBP,EAAtB,CAAH,EAA6B;AAC7BI,MAAAA,eAAe,CAACD,YAAY,CAACK,MAAb,CAAoBC,CAAC,IAAIA,CAAC,KAAKT,EAA/B,CAAD,CAAf;AACC,KAFD,MAEO;AACPI,MAAAA,eAAe,CAAC,CAAC,GAAGD,YAAJ,EAAiBH,EAAjB,CAAD,CAAf;AACC;AACA,GAND;;AAQA,QAAMU,YAAY,GAAG,CAAC;AAACC,IAAAA;AAAD,GAAD,KAAY;AAEjC,UAAMC,QAAQ,GAAGf,KAAK,CAACC,OAAN,CAAcU,MAAd,CAAqBK,GAAG,IAAIA,GAAG,CAACZ,MAAJ,KAAeU,IAAI,CAACX,EAAhD,CAAjB;AAEA,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACP;AAAM,MAAA,OAAO,EAAE,MAAMY,QAAQ,CAACE,MAAT,IAAmBR,UAAU,CAACK,IAAI,CAACX,EAAN,CAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA8DW,IAAI,CAACZ,IAAnE,CADO,EAEP;AAAQ,MAAA,OAAO,EAAE,MAAM,KAAKM,QAAL,CAAcM,IAAI,CAACX,EAAnB,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kGAAiEW,IAAI,CAACZ,IAAtE,CAFO,EAINa,QAAQ,CAACE,MAAT,IAAmBX,YAAY,CAACI,QAAb,CAAsBI,IAAI,CAACX,EAA3B,CAAnB,IAAqD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACrDY,QAAQ,CAACG,GAAT,CAAaC,KAAK,IAAI,oBAAC,YAAD;AAAc,MAAA,IAAI,EAAEA,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAtB,CADqD,CAJ/C,CAAP;AAQC,GAZD;;AAcA,SAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACR;AAAI,IAAA,SAAS,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCnB,KAAK,CAACC,OAAN,CAAcU,MAAd,CAAqBG,IAAI,IAAIA,IAAI,CAACV,MAAL,KAAgB,IAA7C,EAAmDc,GAAnD,CAAuDJ,IAAI,IAAI,oBAAC,YAAD;AAAc,IAAA,IAAI,EAAEA,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA/D,CADD,CADQ,CAAR;;AAOA,WAASM,KAAT,CAAe;AAACN,IAAAA;AAAD,GAAf,EAAsB;AACpB,QAAIO,QAAQ,GAAExB,KAAK,CAACyB,SAAN,EAAd;;AAEA,QAAIC,GAAG,GAAE,MAAI;AACX,UAAIC,QAAQ,GAAEH,QAAQ,CAACI,OAAT,CAAiBC,KAA/B;AACA1B,MAAAA,KAAK,CAACC,OAAN,CAAc0B,IAAd,CAAmB;AAACzB,QAAAA,IAAI,EAAEsB,QAAP;AAAiBrB,QAAAA,EAAE,EAAEF,OAAO,CAACgB,MAAR,GAAe,CAApC;AAAuCb,QAAAA,MAAM,EAAEU,IAAI,CAACX;AAApD,OAAnB;AACAkB,MAAAA,QAAQ,CAACI,OAAT,CAAiBC,KAAjB,GAAuB,IAAvB;AACD,KAJD;;AAKA,WAAO;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACJ;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mIADH,CADJ,EAII;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAU,MAAA,GAAG,EAAGL,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,CAJJ,EAOI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAA+B,MAAA,OAAO,EAAEE,GAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sGADA,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CAFA,CAPJ,CADI,CAAP;AAcD;;AAAA;AAEA","sourcesContent":["import './App.css';\nimport React, {useState, useEffectfrom} from 'react';\n\nconst state ={listDir:[\n{name: 'папка1', id: 0, parent: null },\n{name: 'папка1.1', id: 2, parent: 0, },\n{name: 'папка1.1.1', id: 5, parent: 2, },\n{name: 'папка2', id: 1, parent: null,},\n{name: 'папка2.2', id: 3, parent: 1,},\n{name: 'папка2.1', id: 4, parent: 1 }\n]};\n\n\nexport default function App() {\n\nconst[openedFolder,setOpenedFolder]=useState([]);\nconst[state,setState]=useState([0]);\nconst openFolder = id => {\nif(openedFolder.includes(id)){\nsetOpenedFolder(openedFolder.filter(e => e !== id))\n} else {\nsetOpenedFolder([...openedFolder,id])\n}\n};\n\nconst RenderFolder = ({item}) => {\n\nconst children = state.listDir.filter(dir => dir.parent === item.id);\n\nreturn <li>\n<span onClick={() => children.length && openFolder(item.id)}>{item.name}</span>\n<button onClick={() => this.setState(item.id)}>добавить папку в {item.name}</button>\n\n{children.length && openedFolder.includes(item.id) && <ul>\n{children.map(child => <RenderFolder item={child} />)}\n</ul>}\n</li>;\n};\n\nreturn (<div>\n<ul className=\"App\">\n{state.listDir.filter(item => item.parent === null).map(item => <RenderFolder item={item} />)}\n</ul>\n</div>\n);\n\nfunction Modal({item}){\n  let elimList= React.createRef();\n\n  let add= ()=>{\n    let namelist =elimList.current.value;\n    state.listDir.push({name: namelist, id: listDir.length+1, parent: item.id });\n    elimList.current.value=null;\n  }\n  return <div ClassName=\"ModalOverlay\">\n     <div ClassName=\"ModalWindow\">\n         <div ClassName=\"ModalHead\">\n            <div className='modalTitle'>Добавление дикертории</div>\n         </div>\n         <div ClassName=\"ModalBody\">\n         <textarea ref ={elimList}></textarea>\n         </div>\n         <div ClassName=\"ModalFooter\">\n         <button className=\"ModalButon\" onClick={add}>добавить в списов</button>\n         <button>отмена</button>\n         </div>\n     </div>\n  </div>;\n};\n\n}\n"]},"metadata":{},"sourceType":"module"}