{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u042D\\u043A\\u0441\\u043F\\u0435\\u0440\\u0442\\\\Desktop\\\\govno\\\\directory\\\\directory\\\\src\\\\App.js\";\nimport './App.css';\nimport React, { useState, useEffectfrom } from 'react';\nconst listDir = [{\n  name: 'папка1',\n  id: 1,\n  parent: null\n}, {\n  name: 'папка2',\n  id: 2,\n  parent: null\n}, {\n  name: 'папка1.1',\n  id: 3,\n  parent: 1\n}, {\n  name: 'папка2.2',\n  id: 4,\n  parent: 2\n}, {\n  name: 'папка2.1',\n  id: 5,\n  parent: 2\n}, {\n  name: 'папка1.1.1',\n  id: 6,\n  parent: 3\n}];\nexport default function App() {\n  const [openedFolder, setOpenedFolder] = useState([]);\n  const [state, setState] = useState(false);\n  const [stateDel, setStateDel] = useState(false);\n\n  const openFolder = id => {\n    if (openedFolder.includes(id)) {\n      setOpenedFolder(openedFolder.filter(e => e !== id));\n    } else {\n      setOpenedFolder([...openedFolder, id]);\n    }\n  };\n\n  const RenderFolder = ({\n    item\n  }) => {\n    const children = listDir.filter(dir => dir.parent === item.id);\n    return React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      onClick: () => children.length && openFolder(item.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, item.name), React.createElement(\"button\", {\n      onClick: () => setState(item.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, \"\\u0434\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u043F\\u0430\\u043F\\u043A\\u0443 \\u0432 \", item.name), React.createElement(\"button\", {\n      onClick: () => setStateDel(item.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, \"\\u0443\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C \", item.name), state !== false && state === item.id && React.createElement(Modal, {\n      item: state,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }), stateDel !== false && stateDel === item.id && React.createElement(ModalDel, {\n      item: item,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }), children.length && openedFolder.includes(item.id) && React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, children.map(child => React.createElement(RenderFolder, {\n      item: child,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }))));\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, listDir.filter(item => item.parent === null).map(item => React.createElement(RenderFolder, {\n    item: item,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }))));\n\n  function Modal({\n    item\n  }) {\n    let removeModal = () => {\n      setState(null);\n    };\n\n    if (item) {\n      let elimList = React.createRef();\n\n      let add = () => {\n        let namelist = elimList.current.value;\n        listDir.push({\n          name: namelist,\n          id: listDir.length + 1,\n          parent: item\n        });\n        elimList.current.value = null;\n        openFolder(item.id);\n      };\n\n      return React.createElement(\"div\", {\n        class: \"modal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        ClassName: \"ModalWindow\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        ClassName: \"ModalHead\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"modalTitle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u043B\\u0435\\u043D\\u0438\\u0435 \\u0434\\u0438\\u043A\\u0435\\u0440\\u0442\\u043E\\u0440\\u0438\\u0438\")), React.createElement(\"div\", {\n        ClassName: \"ModalBody\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(\"textarea\", {\n        ref: elimList,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        ClassName: \"ModalFooter\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"ModalButon\",\n        onClick: add,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, \"\\u0434\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0432 \\u0441\\u043F\\u0438\\u0441\\u043E\\u0432\"), React.createElement(\"button\", {\n        onClick: removeModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \"\\u043E\\u0442\\u043C\\u0435\\u043D\\u0430\"))));\n    }\n  }\n\n  ;\n\n  function ModalDel({\n    item\n  }) {\n    function childrenDel(item) {\n      let children = listDir.filter(itemdir => itemdir.parent === item.id);\n      if (listDir.filter(itemdel => itemdel.parent === item.id).length) console.log(listDir.filter(itemdel => itemdel.parent === children.id));\n      children.map(itemdel => delete listDir[itemdel.id - 1]);\n    }\n\n    let removeModal = () => {\n      setStateDel(null);\n    };\n\n    if (item) {\n      let elimList = React.createRef();\n\n      let deleteDir = () => {\n        if (listDir.filter(itemdir => itemdir.parent === item.id)) childrenDel(item);\n        delete listDir[item.id - 1];\n        console.log(listDir);\n        openFolder(item.id);\n      };\n\n      return React.createElement(\"div\", {\n        class: \"modal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        ClassName: \"ModalWindow\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        ClassName: \"ModalHead\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"modalTitle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, \"\\u0412\\u044B \\u0442\\u043E\\u0447\\u043D\\u043E \\u0445\\u043E\\u0442\\u0438\\u0442\\u0435 \\u0443\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C \", item.name)), React.createElement(\"div\", {\n        ClassName: \"ModalFooter\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"ModalButon\",\n        onClick: deleteDir,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\"), React.createElement(\"button\", {\n        onClick: removeModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, \"\\u041E\\u0442\\u043C\\u0435\\u043D\\u0430\"))));\n    }\n  }\n\n  ;\n}","map":{"version":3,"sources":["C:/Users/Эксперт/Desktop/govno/directory/directory/src/App.js"],"names":["React","useState","useEffectfrom","listDir","name","id","parent","App","openedFolder","setOpenedFolder","state","setState","stateDel","setStateDel","openFolder","includes","filter","e","RenderFolder","item","children","dir","length","map","child","Modal","removeModal","elimList","createRef","add","namelist","current","value","push","ModalDel","childrenDel","itemdir","itemdel","console","log","deleteDir"],"mappings":"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","sourcesContent":["import './App.css';\nimport React, {useState, useEffectfrom} from 'react';\n\nconst listDir =[\n{name: 'папка1', id: 1, parent: null },\n{name: 'папка2', id: 2, parent: null,},\n{name: 'папка1.1', id: 3, parent: 1, },\n{name: 'папка2.2', id: 4, parent: 2,},\n{name: 'папка2.1', id: 5, parent: 2 },\n{name: 'папка1.1.1', id: 6, parent: 3, }\n];\n\n\nexport default function App() {\n\nconst[openedFolder,setOpenedFolder]=useState([]);\nconst[state,setState]=useState(false);\nconst[stateDel,setStateDel]=useState(false);\nconst openFolder = id => {\nif(openedFolder.includes(id)){\nsetOpenedFolder(openedFolder.filter(e => e !== id))\n} else {\nsetOpenedFolder([...openedFolder,id])\n}\n};\n\nconst RenderFolder = ({item}) => {\n\nconst children = listDir.filter(dir => dir.parent === item.id);\n\nreturn <li>\n<span onClick={() => children.length && openFolder(item.id)}>{item.name}</span>\n<button onClick={() =>setState(item.id)}>добавить папку в {item.name}</button>\n<button onClick={() =>setStateDel(item.id)}>удалить {item.name}</button>\n{state!==false && state===item.id && <Modal item={state} />}\n{stateDel!==false && stateDel===item.id && <ModalDel item={item} />}\n{children.length && openedFolder.includes(item.id) && <ul>\n{children.map(child => <RenderFolder item={child} />)}\n</ul>}\n</li>;\n};\n\nreturn (<div>\n<ul className=\"App\">\n{listDir.filter(item => item.parent === null).map(item => <RenderFolder item={item} />)}\n</ul>\n</div>\n);\n\nfunction Modal({item}){\n  let removeModal= ()=>{\n    setState(null);\n  }\n  if(item) {\n  let elimList= React.createRef();\n  let add= ()=>{\n    let namelist =elimList.current.value;\n    listDir.push({name: namelist, id: listDir.length + 1, parent: item})\n    elimList.current.value=null;\n    openFolder(item.id);\n  }\n  return (<div class=\"modal\">\n     <div ClassName=\"ModalWindow\">\n         <div ClassName=\"ModalHead\">\n            <div className='modalTitle'>Добавление дикертории</div>\n         </div>\n         <div ClassName=\"ModalBody\">\n         <textarea ref ={elimList}></textarea>\n         </div>\n         <div ClassName=\"ModalFooter\">\n         <button className=\"ModalButon\" onClick={add}>добавить в списов</button>\n         <button onClick={removeModal}>отмена</button>\n         </div>\n     </div>\n  </div>);\n}\n};\nfunction ModalDel({item}){\n\n  function childrenDel(item){\n  let children = listDir.filter(itemdir => itemdir.parent === item.id);\n  if(listDir.filter(itemdel => itemdel.parent === item.id).length)console.log(listDir.filter(itemdel => itemdel.parent === children.id));\n  children.map(itemdel => delete listDir[itemdel.id-1])\n  }\n\n  let removeModal= ()=>{\n    setStateDel(null);\n  }\n  if(item) {\n  let elimList= React.createRef();\n  let deleteDir= ()=>{\n  if(listDir.filter(itemdir => itemdir.parent === item.id))childrenDel(item);\n  delete listDir[item.id-1];\n  console.log(listDir);\n  openFolder(item.id);\n  }\n  return (<div class=\"modal\">\n     <div ClassName=\"ModalWindow\">\n         <div ClassName=\"ModalHead\">\n            <div className='modalTitle'>Вы точно хотите удалить {item.name}</div>\n         </div>\n         <div ClassName=\"ModalFooter\">\n         <button className=\"ModalButon\" onClick={deleteDir}>Удалить</button>\n         <button onClick={removeModal}>Отмена</button>\n         </div>\n     </div>\n  </div>);\n}\n};\n}\n"]},"metadata":{},"sourceType":"module"}