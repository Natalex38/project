{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u042D\\u043A\\u0441\\u043F\\u0435\\u0440\\u0442\\\\Desktop\\\\govno\\\\directory\\\\directory\\\\src\\\\App.js\";\nimport './App.css';\nimport React, { useState, useEffectfrom } from 'react';\nconst listDir = [{\n  name: 'папка1',\n  id: 0,\n  parent: null\n}, {\n  name: 'папка1.1',\n  id: 2,\n  parent: 0\n}, {\n  name: 'папка1.1.1',\n  id: 5,\n  parent: 2\n}, {\n  name: 'папка2',\n  id: 1,\n  parent: null\n}, {\n  name: 'папка2.2',\n  id: 3,\n  parent: 1\n}, {\n  name: 'папка2.1',\n  id: 4,\n  parent: 1\n}];\nexport default function App() {\n  const [openedFolder, setOpenedFolder] = useState([]);\n  const [openedButton, setOpenedButton] = useState([]);\n\n  const openFolder = id => {\n    if (openedFolder.includes(id)) {\n      setOpenedFolder(openedFolder.filter(e => e !== id));\n    } else {\n      setOpenedFolder([...openedFolder, id]);\n    }\n  };\n\n  const onclikButton = id => {\n    if (openedButton.includes(id)) {\n      setOpenedFolder(openedButton.filter(e => e !== id));\n    } else {\n      setOpenedFolder([...openedButton, id]);\n    }\n  };\n\n  const addDir = id => {\n    listDir.push({\n      name: 'папка2.1.1',\n      id: 6,\n      parent: 2\n    });\n  };\n\n  const handleOpen = () => this.setState({\n    modalOpen: true\n  });\n\n  const handleClose = () => this.setState({\n    modalOpen: false\n  });\n\n  const RenderFolder = ({\n    item\n  }) => {\n    const children = listDir.filter(dir => dir.parent === item.id);\n    return React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: () => onclikButton(item.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"\\u0434\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u043F\\u0430\\u043F\\u043A\\u0443\"), onclikButton.includes(item.id) && React.createElement(Modal, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      onClick: () => children.length && openFolder(item.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, item.name), children.length && openedFolder.includes(item.id) && React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, children.map(child => React.createElement(RenderFolder, {\n      item: child,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }))));\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, listDir.filter(item => item.parent === null).map(item => React.createElement(RenderFolder, {\n    item: item,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"Modal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(Modal, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  })));\n\n  function Modal() {\n    let elimList = React.createRef();\n\n    let del = () => {\n      let namelist = elimList.current.value;\n      listDir.push({\n        name: namelist,\n        id: listDir.length + 1,\n        parent: 2\n      });\n    };\n\n    return React.createElement(\"div\", {\n      ClassName: \"ModalOverlay\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      ClassName: \"ModalWindow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      ClassName: \"ModalHead\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"modalTitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u043B\\u0435\\u043D\\u0438\\u0435 \\u0434\\u0438\\u043A\\u0435\\u0440\\u0442\\u043E\\u0440\\u0438\\u0438\")), React.createElement(\"div\", {\n      ClassName: \"ModalBody\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"textarea\", {\n      ref: elimList,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      ClassName: \"ModalFooter\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: del,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"\\u0434\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0432 \\u0441\\u043F\\u0438\\u0441\\u043E\\u0432\"), React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"\\u043E\\u0442\\u043C\\u0435\\u043D\\u0430\"))));\n  }\n\n  ;\n  /*Modal.propTypes ={\n    title:PropTypes.string,\n    isOpen: PropTypes.bool,\n    onCancel:PropTypes.func,\n    onSubmit: PropTypes.func,\n  }\n  Modal.defaultProps={\n    title:'modal title',\n    isOpen:false,\n    onCancel:() => {},\n    onSubmit:() => {},\n  };*/\n}","map":{"version":3,"sources":["C:/Users/Эксперт/Desktop/govno/directory/directory/src/App.js"],"names":["React","useState","useEffectfrom","listDir","name","id","parent","App","openedFolder","setOpenedFolder","openedButton","setOpenedButton","openFolder","includes","filter","e","onclikButton","addDir","push","handleOpen","setState","modalOpen","handleClose","RenderFolder","item","children","dir","length","map","child","Modal","elimList","createRef","del","namelist","current","value"],"mappings":"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","sourcesContent":["import './App.css';\nimport React, {useState, useEffectfrom} from 'react';\n\nconst listDir =[\n{name: 'папка1', id: 0, parent: null },\n{name: 'папка1.1', id: 2, parent: 0, },\n{name: 'папка1.1.1', id: 5, parent: 2, },\n{name: 'папка2', id: 1, parent: null,},\n{name: 'папка2.2', id: 3, parent: 1,},\n{name: 'папка2.1', id: 4, parent: 1 }\n];\n\n\nexport default function App() {\n\nconst[openedFolder,setOpenedFolder]=useState([]);\n\nconst[openedButton,setOpenedButton]=useState([]);\n\nconst openFolder = id => {\nif(openedFolder.includes(id)){\nsetOpenedFolder(openedFolder.filter(e => e !== id))\n} else {\nsetOpenedFolder([...openedFolder,id])\n}\n};\n\nconst onclikButton = id => {\nif(openedButton.includes(id)){\nsetOpenedFolder(openedButton.filter(e => e !== id))\n} else {\nsetOpenedFolder([...openedButton,id])\n}\n};\n\nconst addDir = (id) => {\n  listDir.push({name: 'папка2.1.1', id: 6, parent: 2 });\n};\n\nconst handleOpen = () => this.setState({ modalOpen: true })\n\nconst handleClose = () => this.setState({ modalOpen: false })\n\nconst RenderFolder = ({item}) => {\n\nconst children = listDir.filter(dir => dir.parent === item.id);\n\nreturn <li>\n<button onClick={() => onclikButton(item.id)}>добавить папку</button>\n{onclikButton.includes(item.id) && <Modal />}\n\n<span onClick={() => children.length && openFolder(item.id)}>{item.name}</span>\n{children.length && openedFolder.includes(item.id) && <ul>\n{children.map(child => <RenderFolder item={child} />)}\n</ul>}\n</li>;\n};\n\nreturn (<div>\n<ul className=\"App\">\n{listDir.filter(item => item.parent === null).map(item => <RenderFolder item={item} />)}\n</ul>\n<div className=\"Modal\"><Modal /></div>\n</div>\n);\n\nfunction Modal(){\n  let elimList= React.createRef();\n\n  let del= ()=>{\n    let namelist =elimList.current.value;\n    listDir.push({name: namelist, id: listDir.length+1, parent: 2 });\n  }\n  return <div ClassName=\"ModalOverlay\">\n     <div ClassName=\"ModalWindow\">\n         <div ClassName=\"ModalHead\">\n            <div className='modalTitle'>Добавление дикертории</div>\n         </div>\n         <div ClassName=\"ModalBody\">\n         <textarea ref ={elimList}></textarea>\n         </div>\n         <div ClassName=\"ModalFooter\">\n         <button onClick={del}>добавить в списов</button>\n         <button>отмена</button>\n         </div>\n     </div>\n  </div>;\n};\n/*Modal.propTypes ={\n  title:PropTypes.string,\n  isOpen: PropTypes.bool,\n  onCancel:PropTypes.func,\n  onSubmit: PropTypes.func,\n}\nModal.defaultProps={\n  title:'modal title',\n  isOpen:false,\n  onCancel:() => {},\n  onSubmit:() => {},\n};*/\n}\n"]},"metadata":{},"sourceType":"module"}