{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u042D\\u043A\\u0441\\u043F\\u0435\\u0440\\u0442\\\\Desktop\\\\govno\\\\directory\\\\directory\\\\src\\\\App.js\";\nimport './App.css';\nimport React, { useState, useEffectfrom } from 'react';\nconst listDir = [{\n  name: 'папка1',\n  id: 0,\n  parent: null\n}, {\n  name: 'папка1.1',\n  id: 2,\n  parent: 0\n}, {\n  name: 'папка1.1.1',\n  id: 5,\n  parent: 2\n}, {\n  name: 'папка2',\n  id: 1,\n  parent: null\n}, {\n  name: 'папка2.2',\n  id: 3,\n  parent: 1\n}, {\n  name: 'папка2.1',\n  id: 4,\n  parent: 1\n}];\n\nfunction App() {\n  const [openedFolder, setOpenedFolder] = useState([]);\n\n  const openFolder = id => {\n    if (openedFolder.includes(id)) {\n      setOpenedFolder(openedFolder.filter(e => e !== id));\n    } else {\n      setOpenedFolder([...openedFolder, id]);\n    }\n  };\n\n  console.log(openFolder);\n\n  const RenderFolder = ({\n    item\n  }) => {\n    const children = listDir.filter(dir => dir.parent === item.id);\n    return React.createElement(\"li\", {\n      onClick: () => openFolder(item.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, item.name, children.length && openedFolder.includes(item.id) && React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, children.map(child => React.createElement(RenderFolder, {\n      item: child,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }))));\n  };\n\n  return React.createElement(\"ul\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, listDir.filter(item => item.parent === null).map(item => React.createElement(RenderFolder, {\n    item: item,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  })));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Эксперт/Desktop/govno/directory/directory/src/App.js"],"names":["React","useState","useEffectfrom","listDir","name","id","parent","App","openedFolder","setOpenedFolder","openFolder","includes","filter","e","console","log","RenderFolder","item","children","dir","length","map","child"],"mappings":";AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,aAAzB,QAA6C,OAA7C;AAEA,MAAMC,OAAO,GAAE,CACf;AAACC,EAAAA,IAAI,EAAE,QAAP;AAAiBC,EAAAA,EAAE,EAAE,CAArB;AAAwBC,EAAAA,MAAM,EAAE;AAAhC,CADe,EAEf;AAACF,EAAAA,IAAI,EAAE,UAAP;AAAmBC,EAAAA,EAAE,EAAE,CAAvB;AAA0BC,EAAAA,MAAM,EAAE;AAAlC,CAFe,EAGf;AAACF,EAAAA,IAAI,EAAE,YAAP;AAAqBC,EAAAA,EAAE,EAAE,CAAzB;AAA4BC,EAAAA,MAAM,EAAE;AAApC,CAHe,EAIf;AAACF,EAAAA,IAAI,EAAE,QAAP;AAAiBC,EAAAA,EAAE,EAAE,CAArB;AAAwBC,EAAAA,MAAM,EAAE;AAAhC,CAJe,EAKf;AAACF,EAAAA,IAAI,EAAE,UAAP;AAAmBC,EAAAA,EAAE,EAAE,CAAvB;AAA0BC,EAAAA,MAAM,EAAE;AAAlC,CALe,EAMf;AAACF,EAAAA,IAAI,EAAE,UAAP;AAAmBC,EAAAA,EAAE,EAAE,CAAvB;AAA0BC,EAAAA,MAAM,EAAE;AAAlC,CANe,CAAf;;AAWA,SAASC,GAAT,GAAe;AACb,QAAK,CAACC,YAAD,EAAcC,eAAd,IAA+BR,QAAQ,CAAC,EAAD,CAA5C;;AACA,QAAMS,UAAU,GAAGL,EAAE,IAAG;AACtB,QAAGG,YAAY,CAACG,QAAb,CAAsBN,EAAtB,CAAH,EAA6B;AAC3BI,MAAAA,eAAe,CAACD,YAAY,CAACI,MAAb,CAAoBC,CAAC,IAAIA,CAAC,KAAKR,EAA/B,CAAD,CAAf;AACD,KAFD,MAGI;AACFI,MAAAA,eAAe,CAAC,CAAC,GAAGD,YAAJ,EAAiBH,EAAjB,CAAD,CAAf;AACD;AACF,GAPD;;AAQAS,EAAAA,OAAO,CAACC,GAAR,CAAYL,UAAZ;;AACA,QAAMM,YAAY,GAAG,CAAC;AAACC,IAAAA;AAAD,GAAD,KAAY;AACjC,UAAMC,QAAQ,GAAGf,OAAO,CAACS,MAAR,CAAeO,GAAG,IAAIA,GAAG,CAACb,MAAJ,KAAeW,IAAI,CAACZ,EAA1C,CAAjB;AACA,WAAO;AAAI,MAAA,OAAO,EAAE,MAAMK,UAAU,CAACO,IAAI,CAACZ,EAAN,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACNY,IAAI,CAACb,IADC,EAENc,QAAQ,CAACE,MAAT,IAAmBZ,YAAY,CAACG,QAAb,CAAsBM,IAAI,CAACZ,EAA3B,CAAnB,IAAqD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACrDa,QAAQ,CAACG,GAAT,CAAaC,KAAK,IAAI,oBAAC,YAAD;AAAc,MAAA,IAAI,EAAEA,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAtB,CADqD,CAF/C,CAAP;AAMC,GARD;;AASF,SACA;AAAI,IAAA,SAAS,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCnB,OAAO,CAACS,MAAR,CAAeK,IAAI,IAAIA,IAAI,CAACX,MAAL,KAAgB,IAAvC,EAA6Ce,GAA7C,CAAiDJ,IAAI,IAAI,oBAAC,YAAD;AAAc,IAAA,IAAI,EAAEA,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAzD,CADD,CADA;AAKC;;AAED,eAAeV,GAAf","sourcesContent":["import './App.css';\nimport React, {useState, useEffectfrom} from 'react';\n\nconst listDir =[\n{name: 'папка1', id: 0, parent: null },\n{name: 'папка1.1', id: 2, parent: 0, },\n{name: 'папка1.1.1', id: 5, parent: 2, },\n{name: 'папка2', id: 1, parent: null,},\n{name: 'папка2.2', id: 3, parent: 1,},\n{name: 'папка2.1', id: 4, parent: 1 },\n];\n\n\n\nfunction App() {\n  const[openedFolder,setOpenedFolder]=useState([]);\n  const openFolder = id =>{\n    if(openedFolder.includes(id)){\n      setOpenedFolder(openedFolder.filter(e => e !== id))\n    }\n    else{\n      setOpenedFolder([...openedFolder,id])\n    }\n  }\n  console.log(openFolder);\n  const RenderFolder = ({item}) => {\n  const children = listDir.filter(dir => dir.parent === item.id);\n  return <li onClick={() => openFolder(item.id)}>\n  {item.name}\n  {children.length && openedFolder.includes(item.id) && <ul>\n  {children.map(child => <RenderFolder item={child} />)}\n  </ul>}\n  </li>;\n  }\nreturn (\n<ul className=\"App\">\n{listDir.filter(item => item.parent === null).map(item => <RenderFolder item={item} />)}\n</ul>\n);\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}